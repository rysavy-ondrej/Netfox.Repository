<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5ea16fa0-f1d5-488e-83df-d1b8ae64e9e3}</ProjectGuid>
    <SHFBSchemaVersion>2015.6.5.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Framework 4.5</FrameworkVersion>
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\Netfox.Repository\Netfox.Repository.csproj" xmlns="" />
    </DocumentationSources>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <HelpFileFormat>MSHelpViewer, Website</HelpFileFormat>
    <IndentHtml>False</IndentHtml>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CleanIntermediates>True</CleanIntermediates>
    <HelpFileVersion>1.0.0.0</HelpFileVersion>
    <MaximumGroupParts>2</MaximumGroupParts>
    <NamespaceGrouping>True</NamespaceGrouping>
    <SyntaxFilters>C#, F#</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>True</RootNamespaceContainer>
    <PresentationStyle>VS2013</PresentationStyle>
    <Preliminary>True</Preliminary>
    <NamingMethod>Guid</NamingMethod>
    <HelpTitle>Netfox.Repository Library Documentation</HelpTitle>
    <CopyrightText>Copyright &amp;#169%3b 2015  Netfox</CopyrightText>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="Netfox.Repository" isDocumented="True">The Netfox.Repository namespace contain classes for accessing and managing data using the approach similar to Entity Framework. Main class is &lt;see cref="NRepositoryContext" /&gt;  that enables to create and manage data context in your application.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Netfox.Repository.Attributes" isDocumented="True">The Netfox.Repository.Attributes namespace contains attribute definitions that data object should use to annotate contolled properties and refefences.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Netfox.Repository.Internals" isDocumented="False" />
<NamespaceSummaryItem name="Netfox.Repository.Serialization" isDocumented="True">The Netfox.Repository.Serialization namespace contains crafted Bson serializers that supports Netfox.Repository data management framework.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Netfox.Repository.Utils" isDocumented="True">The Netfox.Repository.Utils namespace contains various classes that are used throrough the Netfox.Repository library and can be used also in user applications.</NamespaceSummaryItem>
<NamespaceSummaryItem name="(global)" isDocumented="True">Netfox.Repository Library implementes a light-weight data management in the style of Entity Framework. The only supported data source is Mongo DB and async C# connector is used to access data store. Most of the data manipulation methods are thus async too. The root object is NRepositoryContext that provides a basic set of operations to connect to the database, read and write data. Netfox.Repository also implements a data object cache that automatically evict dead objects.</NamespaceSummaryItem></NamespaceSummaries>
    <RootNamespaceTitle>Namespaces</RootNamespaceTitle>
    <FeedbackEMailAddress>netfox%40fit.vutbr.cz</FeedbackEMailAddress>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>